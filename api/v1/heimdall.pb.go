// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/stellarproject/heimdall/api/v1/heimdall.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Master struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GRPCAddress          string   `protobuf:"bytes,2,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	RedisURL             string   `protobuf:"bytes,3,opt,name=redis_url,json=redisUrl,proto3" json:"redis_url,omitempty"`
	GatewayIP            string   `protobuf:"bytes,4,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	Peers                []*Peer  `protobuf:"bytes,5,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Master) Reset()         { *m = Master{} }
func (m *Master) String() string { return proto.CompactTextString(m) }
func (*Master) ProtoMessage()    {}
func (*Master) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{0}
}
func (m *Master) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Master.Unmarshal(m, b)
}
func (m *Master) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Master.Marshal(b, m, deterministic)
}
func (m *Master) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Master.Merge(m, src)
}
func (m *Master) XXX_Size() int {
	return xxx_messageInfo_Master.Size(m)
}
func (m *Master) XXX_DiscardUnknown() {
	xxx_messageInfo_Master.DiscardUnknown(m)
}

var xxx_messageInfo_Master proto.InternalMessageInfo

func (m *Master) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Master) GetGRPCAddress() string {
	if m != nil {
		return m.GRPCAddress
	}
	return ""
}

func (m *Master) GetRedisURL() string {
	if m != nil {
		return m.RedisURL
	}
	return ""
}

func (m *Master) GetGatewayIP() string {
	if m != nil {
		return m.GatewayIP
	}
	return ""
}

func (m *Master) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type JoinRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClusterKey           string   `protobuf:"bytes,2,opt,name=cluster_key,json=clusterKey,proto3" json:"cluster_key,omitempty"`
	GRPCAddress          string   `protobuf:"bytes,3,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	EndpointIP           string   `protobuf:"bytes,4,opt,name=endpoint_ip,json=endpointIp,proto3" json:"endpoint_ip,omitempty"`
	EndpointPort         uint64   `protobuf:"varint,5,opt,name=endpoint_port,json=endpointPort,proto3" json:"endpoint_port,omitempty"`
	InterfaceName        string   `protobuf:"bytes,6,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{1}
}
func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *JoinRequest) GetClusterKey() string {
	if m != nil {
		return m.ClusterKey
	}
	return ""
}

func (m *JoinRequest) GetGRPCAddress() string {
	if m != nil {
		return m.GRPCAddress
	}
	return ""
}

func (m *JoinRequest) GetEndpointIP() string {
	if m != nil {
		return m.EndpointIP
	}
	return ""
}

func (m *JoinRequest) GetEndpointPort() uint64 {
	if m != nil {
		return m.EndpointPort
	}
	return 0
}

func (m *JoinRequest) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type JoinResponse struct {
	Master               *Master  `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Peers                []*Peer  `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{2}
}
func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetMaster() *Master {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *JoinResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *JoinResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type ConnectRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{3}
}
func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ConnectResponse struct {
	KeyPair              *KeyPair `protobuf:"bytes,1,opt,name=keypair,proto3" json:"keypair,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Peers                []*Peer  `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	DNS                  []string `protobuf:"bytes,4,rep,name=dns,proto3" json:"dns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{4}
}
func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetKeyPair() *KeyPair {
	if m != nil {
		return m.KeyPair
	}
	return nil
}

func (m *ConnectResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConnectResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *ConnectResponse) GetDNS() []string {
	if m != nil {
		return m.DNS
	}
	return nil
}

type AuthorizePeerRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizePeerRequest) Reset()         { *m = AuthorizePeerRequest{} }
func (m *AuthorizePeerRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizePeerRequest) ProtoMessage()    {}
func (*AuthorizePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{5}
}
func (m *AuthorizePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizePeerRequest.Unmarshal(m, b)
}
func (m *AuthorizePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizePeerRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizePeerRequest.Merge(m, src)
}
func (m *AuthorizePeerRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizePeerRequest.Size(m)
}
func (m *AuthorizePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizePeerRequest proto.InternalMessageInfo

func (m *AuthorizePeerRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type DeauthorizePeerRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeauthorizePeerRequest) Reset()         { *m = DeauthorizePeerRequest{} }
func (m *DeauthorizePeerRequest) String() string { return proto.CompactTextString(m) }
func (*DeauthorizePeerRequest) ProtoMessage()    {}
func (*DeauthorizePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{6}
}
func (m *DeauthorizePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeauthorizePeerRequest.Unmarshal(m, b)
}
func (m *DeauthorizePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeauthorizePeerRequest.Marshal(b, m, deterministic)
}
func (m *DeauthorizePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeauthorizePeerRequest.Merge(m, src)
}
func (m *DeauthorizePeerRequest) XXX_Size() int {
	return xxx_messageInfo_DeauthorizePeerRequest.Size(m)
}
func (m *DeauthorizePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeauthorizePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeauthorizePeerRequest proto.InternalMessageInfo

func (m *DeauthorizePeerRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type AuthorizedPeersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizedPeersRequest) Reset()         { *m = AuthorizedPeersRequest{} }
func (m *AuthorizedPeersRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizedPeersRequest) ProtoMessage()    {}
func (*AuthorizedPeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{7}
}
func (m *AuthorizedPeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizedPeersRequest.Unmarshal(m, b)
}
func (m *AuthorizedPeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizedPeersRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizedPeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizedPeersRequest.Merge(m, src)
}
func (m *AuthorizedPeersRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizedPeersRequest.Size(m)
}
func (m *AuthorizedPeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizedPeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizedPeersRequest proto.InternalMessageInfo

type AuthorizedPeersResponse struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizedPeersResponse) Reset()         { *m = AuthorizedPeersResponse{} }
func (m *AuthorizedPeersResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizedPeersResponse) ProtoMessage()    {}
func (*AuthorizedPeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{8}
}
func (m *AuthorizedPeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizedPeersResponse.Unmarshal(m, b)
}
func (m *AuthorizedPeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizedPeersResponse.Marshal(b, m, deterministic)
}
func (m *AuthorizedPeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizedPeersResponse.Merge(m, src)
}
func (m *AuthorizedPeersResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizedPeersResponse.Size(m)
}
func (m *AuthorizedPeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizedPeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizedPeersResponse proto.InternalMessageInfo

func (m *AuthorizedPeersResponse) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

type KeyPair struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPair) Reset()         { *m = KeyPair{} }
func (m *KeyPair) String() string { return proto.CompactTextString(m) }
func (*KeyPair) ProtoMessage()    {}
func (*KeyPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{9}
}
func (m *KeyPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPair.Unmarshal(m, b)
}
func (m *KeyPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPair.Marshal(b, m, deterministic)
}
func (m *KeyPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPair.Merge(m, src)
}
func (m *KeyPair) XXX_Size() int {
	return xxx_messageInfo_KeyPair.Size(m)
}
func (m *KeyPair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPair proto.InternalMessageInfo

func (m *KeyPair) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *KeyPair) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type Node struct {
	ID                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string    `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	KeyPair              *KeyPair  `protobuf:"bytes,3,opt,name=keypair,proto3" json:"keypair,omitempty"`
	EndpointIP           string    `protobuf:"bytes,4,opt,name=endpoint_ip,json=endpointIp,proto3" json:"endpoint_ip,omitempty"`
	EndpointPort         uint64    `protobuf:"varint,5,opt,name=endpoint_port,json=endpointPort,proto3" json:"endpoint_port,omitempty"`
	GatewayIP            string    `protobuf:"bytes,6,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	Updated              time.Time `protobuf:"bytes,7,opt,name=updated,proto3,stdtime" json:"updated"`
	InterfaceName        string    `protobuf:"bytes,8,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{10}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Node) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Node) GetKeyPair() *KeyPair {
	if m != nil {
		return m.KeyPair
	}
	return nil
}

func (m *Node) GetEndpointIP() string {
	if m != nil {
		return m.EndpointIP
	}
	return ""
}

func (m *Node) GetEndpointPort() uint64 {
	if m != nil {
		return m.EndpointPort
	}
	return 0
}

func (m *Node) GetGatewayIP() string {
	if m != nil {
		return m.GatewayIP
	}
	return ""
}

func (m *Node) GetUpdated() time.Time {
	if m != nil {
		return m.Updated
	}
	return time.Time{}
}

func (m *Node) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type NodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesRequest) Reset()         { *m = NodesRequest{} }
func (m *NodesRequest) String() string { return proto.CompactTextString(m) }
func (*NodesRequest) ProtoMessage()    {}
func (*NodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{11}
}
func (m *NodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesRequest.Unmarshal(m, b)
}
func (m *NodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesRequest.Marshal(b, m, deterministic)
}
func (m *NodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesRequest.Merge(m, src)
}
func (m *NodesRequest) XXX_Size() int {
	return xxx_messageInfo_NodesRequest.Size(m)
}
func (m *NodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodesRequest proto.InternalMessageInfo

type NodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesResponse) Reset()         { *m = NodesResponse{} }
func (m *NodesResponse) String() string { return proto.CompactTextString(m) }
func (*NodesResponse) ProtoMessage()    {}
func (*NodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{12}
}
func (m *NodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesResponse.Unmarshal(m, b)
}
func (m *NodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesResponse.Marshal(b, m, deterministic)
}
func (m *NodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesResponse.Merge(m, src)
}
func (m *NodesResponse) XXX_Size() int {
	return xxx_messageInfo_NodesResponse.Size(m)
}
func (m *NodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodesResponse proto.InternalMessageInfo

func (m *NodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Peer struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KeyPair              *KeyPair `protobuf:"bytes,2,opt,name=keypair,proto3" json:"keypair,omitempty"`
	AllowedIPs           []string `protobuf:"bytes,3,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`
	Endpoint             string   `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{13}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Peer) GetKeyPair() *KeyPair {
	if m != nil {
		return m.KeyPair
	}
	return nil
}

func (m *Peer) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

func (m *Peer) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type PeersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeersRequest) Reset()         { *m = PeersRequest{} }
func (m *PeersRequest) String() string { return proto.CompactTextString(m) }
func (*PeersRequest) ProtoMessage()    {}
func (*PeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{14}
}
func (m *PeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersRequest.Unmarshal(m, b)
}
func (m *PeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersRequest.Marshal(b, m, deterministic)
}
func (m *PeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersRequest.Merge(m, src)
}
func (m *PeersRequest) XXX_Size() int {
	return xxx_messageInfo_PeersRequest.Size(m)
}
func (m *PeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeersRequest proto.InternalMessageInfo

type PeersResponse struct {
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeersResponse) Reset()         { *m = PeersResponse{} }
func (m *PeersResponse) String() string { return proto.CompactTextString(m) }
func (*PeersResponse) ProtoMessage()    {}
func (*PeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{15}
}
func (m *PeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersResponse.Unmarshal(m, b)
}
func (m *PeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersResponse.Marshal(b, m, deterministic)
}
func (m *PeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersResponse.Merge(m, src)
}
func (m *PeersResponse) XXX_Size() int {
	return xxx_messageInfo_PeersResponse.Size(m)
}
func (m *PeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeersResponse proto.InternalMessageInfo

func (m *PeersResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type Route struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{16}
}
func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *Route) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type CreateRouteRequest struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRouteRequest) Reset()         { *m = CreateRouteRequest{} }
func (m *CreateRouteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRouteRequest) ProtoMessage()    {}
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{17}
}
func (m *CreateRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRouteRequest.Unmarshal(m, b)
}
func (m *CreateRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRouteRequest.Marshal(b, m, deterministic)
}
func (m *CreateRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRouteRequest.Merge(m, src)
}
func (m *CreateRouteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRouteRequest.Size(m)
}
func (m *CreateRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRouteRequest proto.InternalMessageInfo

func (m *CreateRouteRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *CreateRouteRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type DeleteRouteRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRouteRequest) Reset()         { *m = DeleteRouteRequest{} }
func (m *DeleteRouteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRouteRequest) ProtoMessage()    {}
func (*DeleteRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{18}
}
func (m *DeleteRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRouteRequest.Unmarshal(m, b)
}
func (m *DeleteRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRouteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRouteRequest.Merge(m, src)
}
func (m *DeleteRouteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRouteRequest.Size(m)
}
func (m *DeleteRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRouteRequest proto.InternalMessageInfo

func (m *DeleteRouteRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type RoutesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoutesRequest) Reset()         { *m = RoutesRequest{} }
func (m *RoutesRequest) String() string { return proto.CompactTextString(m) }
func (*RoutesRequest) ProtoMessage()    {}
func (*RoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{19}
}
func (m *RoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutesRequest.Unmarshal(m, b)
}
func (m *RoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutesRequest.Marshal(b, m, deterministic)
}
func (m *RoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutesRequest.Merge(m, src)
}
func (m *RoutesRequest) XXX_Size() int {
	return xxx_messageInfo_RoutesRequest.Size(m)
}
func (m *RoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoutesRequest proto.InternalMessageInfo

type RoutesResponse struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoutesResponse) Reset()         { *m = RoutesResponse{} }
func (m *RoutesResponse) String() string { return proto.CompactTextString(m) }
func (*RoutesResponse) ProtoMessage()    {}
func (*RoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6184fc395da86b1, []int{20}
}
func (m *RoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutesResponse.Unmarshal(m, b)
}
func (m *RoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutesResponse.Marshal(b, m, deterministic)
}
func (m *RoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutesResponse.Merge(m, src)
}
func (m *RoutesResponse) XXX_Size() int {
	return xxx_messageInfo_RoutesResponse.Size(m)
}
func (m *RoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoutesResponse proto.InternalMessageInfo

func (m *RoutesResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func init() {
	proto.RegisterType((*Master)(nil), "io.stellarproject.heimdall.api.v1.Master")
	proto.RegisterType((*JoinRequest)(nil), "io.stellarproject.heimdall.api.v1.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "io.stellarproject.heimdall.api.v1.JoinResponse")
	proto.RegisterType((*ConnectRequest)(nil), "io.stellarproject.heimdall.api.v1.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "io.stellarproject.heimdall.api.v1.ConnectResponse")
	proto.RegisterType((*AuthorizePeerRequest)(nil), "io.stellarproject.heimdall.api.v1.AuthorizePeerRequest")
	proto.RegisterType((*DeauthorizePeerRequest)(nil), "io.stellarproject.heimdall.api.v1.DeauthorizePeerRequest")
	proto.RegisterType((*AuthorizedPeersRequest)(nil), "io.stellarproject.heimdall.api.v1.AuthorizedPeersRequest")
	proto.RegisterType((*AuthorizedPeersResponse)(nil), "io.stellarproject.heimdall.api.v1.AuthorizedPeersResponse")
	proto.RegisterType((*KeyPair)(nil), "io.stellarproject.heimdall.api.v1.KeyPair")
	proto.RegisterType((*Node)(nil), "io.stellarproject.heimdall.api.v1.Node")
	proto.RegisterType((*NodesRequest)(nil), "io.stellarproject.heimdall.api.v1.NodesRequest")
	proto.RegisterType((*NodesResponse)(nil), "io.stellarproject.heimdall.api.v1.NodesResponse")
	proto.RegisterType((*Peer)(nil), "io.stellarproject.heimdall.api.v1.Peer")
	proto.RegisterType((*PeersRequest)(nil), "io.stellarproject.heimdall.api.v1.PeersRequest")
	proto.RegisterType((*PeersResponse)(nil), "io.stellarproject.heimdall.api.v1.PeersResponse")
	proto.RegisterType((*Route)(nil), "io.stellarproject.heimdall.api.v1.Route")
	proto.RegisterType((*CreateRouteRequest)(nil), "io.stellarproject.heimdall.api.v1.CreateRouteRequest")
	proto.RegisterType((*DeleteRouteRequest)(nil), "io.stellarproject.heimdall.api.v1.DeleteRouteRequest")
	proto.RegisterType((*RoutesRequest)(nil), "io.stellarproject.heimdall.api.v1.RoutesRequest")
	proto.RegisterType((*RoutesResponse)(nil), "io.stellarproject.heimdall.api.v1.RoutesResponse")
}

func init() {
	proto.RegisterFile("github.com/stellarproject/heimdall/api/v1/heimdall.proto", fileDescriptor_b6184fc395da86b1)
}

var fileDescriptor_b6184fc395da86b1 = []byte{
	// 1082 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xc6, 0xf9, 0x9d, 0x97, 0xa6, 0x95, 0x46, 0xab, 0xe2, 0x0d, 0x42, 0x2e, 0x59, 0x21, 0xb2,
	0x68, 0x65, 0xb7, 0x05, 0xc4, 0x8f, 0xd5, 0x22, 0xda, 0x66, 0x59, 0x4c, 0xa1, 0x0a, 0xb3, 0xec,
	0x05, 0xad, 0x14, 0xdc, 0xf8, 0x6d, 0xea, 0xd6, 0xf1, 0x0c, 0xf6, 0xa4, 0x55, 0xf8, 0x0b, 0x38,
	0xf2, 0xff, 0x20, 0x71, 0xe6, 0xc2, 0x9d, 0x53, 0x90, 0x72, 0xe6, 0xc0, 0x8d, 0x2b, 0x1a, 0x7b,
	0xec, 0x26, 0x6d, 0xa3, 0xba, 0xdd, 0xdd, 0x5b, 0xe7, 0xcd, 0xfb, 0xde, 0xcb, 0xfb, 0xde, 0x7b,
	0xdf, 0xb8, 0xf0, 0xc9, 0xd0, 0x13, 0x47, 0xe3, 0x43, 0x73, 0xc0, 0x46, 0x56, 0x24, 0xd0, 0xf7,
	0x9d, 0x90, 0x87, 0xec, 0x18, 0x07, 0xc2, 0x3a, 0x42, 0x6f, 0xe4, 0x3a, 0xbe, 0x6f, 0x39, 0xdc,
	0xb3, 0x4e, 0xb7, 0xb2, 0xb3, 0xc9, 0x43, 0x26, 0x18, 0x79, 0xc7, 0x63, 0xe6, 0x22, 0xc2, 0xcc,
	0x3c, 0x1c, 0xee, 0x99, 0xa7, 0x5b, 0xad, 0x3b, 0x43, 0x36, 0x64, 0xb1, 0xb7, 0x25, 0xff, 0x4a,
	0x80, 0xad, 0xb7, 0x86, 0x8c, 0x0d, 0x7d, 0xb4, 0xe2, 0xd3, 0xe1, 0xf8, 0x85, 0x85, 0x23, 0x2e,
	0x26, 0xea, 0xd2, 0xb8, 0x78, 0x29, 0xbc, 0x11, 0x46, 0xc2, 0x19, 0xf1, 0xc4, 0xa1, 0xfd, 0x8f,
	0x06, 0x95, 0x6f, 0x9d, 0x48, 0x60, 0x48, 0xd6, 0xa1, 0xe0, 0xb9, 0xba, 0xb6, 0xa1, 0x75, 0xea,
	0xbb, 0x95, 0xd9, 0xd4, 0x28, 0xd8, 0x5d, 0x5a, 0xf0, 0x5c, 0xb2, 0x0d, 0x2b, 0xc3, 0x90, 0x0f,
	0xfa, 0x8e, 0xeb, 0x86, 0x18, 0x45, 0x7a, 0x21, 0xf6, 0x58, 0x9b, 0x4d, 0x8d, 0xc6, 0x13, 0xda,
	0xdb, 0xdb, 0x49, 0xcc, 0xb4, 0x21, 0x9d, 0xd4, 0x81, 0xdc, 0x87, 0x7a, 0x88, 0xae, 0x17, 0xf5,
	0xc7, 0xa1, 0xaf, 0x17, 0x63, 0xc0, 0xca, 0x6c, 0x6a, 0xd4, 0xa8, 0x34, 0x3e, 0xa3, 0xdf, 0xd0,
	0x5a, 0x7c, 0xfd, 0x2c, 0xf4, 0xc9, 0x03, 0x80, 0xa1, 0x23, 0xf0, 0xcc, 0x99, 0xf4, 0x3d, 0xae,
	0x97, 0x62, 0xdf, 0xe6, 0x6c, 0x6a, 0xd4, 0x9f, 0x24, 0x56, 0xbb, 0x47, 0xeb, 0xca, 0xc1, 0xe6,
	0xe4, 0x11, 0x94, 0x39, 0x62, 0x18, 0xe9, 0xe5, 0x8d, 0x62, 0xa7, 0xb1, 0xfd, 0x9e, 0x79, 0x2d,
	0x6d, 0x66, 0x0f, 0x31, 0xa4, 0x09, 0xaa, 0xfd, 0x9f, 0x06, 0x8d, 0xaf, 0x99, 0x17, 0x50, 0xfc,
	0x69, 0x8c, 0x91, 0x58, 0x5a, 0xb3, 0x01, 0x8d, 0x81, 0x3f, 0x96, 0xb4, 0xf4, 0x4f, 0x70, 0x92,
	0x94, 0x4c, 0x41, 0x99, 0xf6, 0x71, 0x72, 0x89, 0x94, 0x62, 0x0e, 0x52, 0x2c, 0x68, 0x60, 0xe0,
	0x72, 0xe6, 0x05, 0xe2, 0xbc, 0xd4, 0xd5, 0xd9, 0xd4, 0x80, 0xc7, 0xca, 0x6c, 0xf7, 0x28, 0xa4,
	0x2e, 0x36, 0x27, 0xf7, 0xa0, 0x99, 0x01, 0x38, 0x0b, 0x85, 0x5e, 0xde, 0xd0, 0x3a, 0x25, 0xba,
	0x92, 0x1a, 0x7b, 0x2c, 0x14, 0xe4, 0x5d, 0x58, 0xf5, 0x02, 0x81, 0xe1, 0x0b, 0x67, 0x80, 0xfd,
	0xc0, 0x19, 0xa1, 0x5e, 0x89, 0x7f, 0x6d, 0x33, 0xb3, 0x1e, 0x38, 0x23, 0x6c, 0xff, 0xa9, 0xc1,
	0x4a, 0x52, 0x79, 0xc4, 0x59, 0x10, 0x21, 0xd9, 0x81, 0xca, 0x28, 0x6e, 0x7c, 0x5c, 0x7e, 0x63,
	0xfb, 0x7e, 0x0e, 0x2a, 0x93, 0x49, 0xa1, 0x0a, 0x48, 0x1e, 0x42, 0x29, 0x60, 0x2e, 0xc6, 0xf4,
	0xe4, 0xeb, 0xc5, 0x01, 0x73, 0x91, 0xc6, 0xa0, 0xf3, 0x4e, 0x16, 0x6f, 0xd5, 0xc9, 0x0e, 0xac,
	0xee, 0xb1, 0x20, 0xc0, 0x81, 0xb8, 0xa6, 0x97, 0xed, 0xbf, 0x34, 0x58, 0xcb, 0x5c, 0x55, 0xf1,
	0xdf, 0x41, 0xf5, 0x04, 0x27, 0xdc, 0xf1, 0xd2, 0xea, 0xdf, 0xcf, 0x91, 0x7e, 0x1f, 0x27, 0x3d,
	0xc7, 0x0b, 0x77, 0x1b, 0xb3, 0xa9, 0x51, 0x55, 0x07, 0x9a, 0xc6, 0x21, 0x3a, 0x54, 0x17, 0x36,
	0x84, 0xa6, 0xc7, 0x97, 0xac, 0x94, 0xdc, 0x85, 0xa2, 0x1b, 0x44, 0x7a, 0x69, 0xa3, 0xd8, 0xa9,
	0xef, 0x56, 0x67, 0x53, 0xa3, 0xd8, 0x3d, 0x78, 0x4a, 0xa5, 0xad, 0x6d, 0xc2, 0x9d, 0x9d, 0xb1,
	0x38, 0x62, 0xa1, 0xf7, 0x33, 0xc6, 0x90, 0x6b, 0xa8, 0xd8, 0x84, 0xf5, 0x2e, 0x3a, 0x37, 0x41,
	0xe8, 0xb0, 0x9e, 0x65, 0x70, 0x25, 0x20, 0x52, 0x88, 0xf6, 0x87, 0xf0, 0xe6, 0xa5, 0x1b, 0xc5,
	0xee, 0x5d, 0x28, 0x7a, 0x6e, 0xa4, 0x6b, 0xe7, 0xbf, 0xd8, 0xee, 0x46, 0x54, 0xda, 0xda, 0x36,
	0xa4, 0xcc, 0xc9, 0x1d, 0xe3, 0xa1, 0x77, 0xea, 0x08, 0x8c, 0x77, 0x4c, 0x4b, 0x76, 0x4c, 0x99,
	0xe4, 0x8e, 0xbd, 0x0d, 0xc0, 0xc7, 0x87, 0xbe, 0x37, 0x98, 0xdb, 0xc1, 0x7a, 0x62, 0xd9, 0xc7,
	0x49, 0xfb, 0xdf, 0x02, 0x94, 0xe4, 0x3c, 0x2d, 0x5d, 0x62, 0x02, 0x25, 0xd9, 0x02, 0x85, 0x8c,
	0xff, 0x9e, 0x6f, 0x7c, 0xf1, 0x15, 0x35, 0xfe, 0xf5, 0xac, 0xf5, 0xa2, 0x2c, 0x56, 0xae, 0x91,
	0xc5, 0xcf, 0xa1, 0x3a, 0xe6, 0xae, 0x23, 0xd0, 0xd5, 0xab, 0x71, 0x59, 0x2d, 0x33, 0x51, 0x7e,
	0x33, 0x55, 0x7e, 0xf3, 0xfb, 0x54, 0xf9, 0x77, 0x6b, 0x7f, 0x4c, 0x8d, 0x37, 0x7e, 0xfd, 0xdb,
	0xd0, 0x68, 0x0a, 0xba, 0x42, 0x44, 0x6a, 0x57, 0x89, 0xc8, 0x2a, 0xac, 0x48, 0xc6, 0xb3, 0x19,
	0x38, 0x80, 0xa6, 0x3a, 0xab, 0xce, 0x3f, 0x82, 0xb2, 0x5c, 0xee, 0xa4, 0xf7, 0x37, 0x90, 0x84,
	0x04, 0xd5, 0xfe, 0x5d, 0x83, 0x92, 0x1c, 0xa5, 0xa5, 0x2d, 0x9d, 0x6b, 0x5f, 0xe1, 0xd5, 0xb5,
	0xcf, 0xf1, 0x7d, 0x76, 0x86, 0x6e, 0xdf, 0xe3, 0xc9, 0x8e, 0xaa, 0xf6, 0xed, 0x24, 0x66, 0xbb,
	0x17, 0x51, 0x50, 0x2e, 0x36, 0x8f, 0x48, 0x0b, 0x6a, 0x69, 0xa7, 0x92, 0x66, 0xd3, 0xec, 0x2c,
	0x09, 0x5a, 0x58, 0x92, 0x03, 0x68, 0x2e, 0xae, 0x46, 0xa6, 0x05, 0xda, 0xad, 0x54, 0xef, 0x4b,
	0x28, 0x53, 0x36, 0x16, 0x48, 0xee, 0x41, 0x55, 0x52, 0xd6, 0xcf, 0x58, 0x82, 0xd9, 0xd4, 0xa8,
	0x48, 0x2e, 0xed, 0x2e, 0xad, 0xc8, 0x2b, 0xdb, 0x95, 0x92, 0x14, 0xa0, 0x38, 0x63, 0xe1, 0x49,
	0x2a, 0x49, 0xea, 0xd8, 0x7e, 0x0a, 0x64, 0x2f, 0x44, 0x47, 0x60, 0x1c, 0x2d, 0x15, 0x81, 0x97,
	0x0c, 0x6a, 0x02, 0xe9, 0xa2, 0x8f, 0x17, 0x82, 0xce, 0xf9, 0x6b, 0x8b, 0xfe, 0x6b, 0xd0, 0x8c,
	0x3d, 0x33, 0xb6, 0x28, 0xac, 0xa6, 0x06, 0x45, 0xd7, 0x17, 0x50, 0x09, 0x63, 0x8b, 0xe2, 0xab,
	0x93, 0x83, 0xaf, 0x24, 0xbb, 0xc2, 0x6d, 0xff, 0x56, 0x83, 0xda, 0x57, 0xca, 0x83, 0x70, 0xa8,
	0xaa, 0x97, 0x80, 0x6c, 0xe5, 0x88, 0xb4, 0xf8, 0xc0, 0xb4, 0xb6, 0x6f, 0x02, 0x51, 0x05, 0xfc,
	0x08, 0xcd, 0x05, 0x85, 0x26, 0x1f, 0xe7, 0x08, 0x72, 0x95, 0xa6, 0xb7, 0xd6, 0x2f, 0x6d, 0xf4,
	0x63, 0xf9, 0xa1, 0x47, 0x5c, 0x58, 0xbb, 0xa0, 0xe9, 0xe4, 0xd3, 0x1c, 0x39, 0xae, 0x7e, 0x07,
	0x96, 0x66, 0xf9, 0x45, 0x83, 0xb5, 0x0b, 0x72, 0x9f, 0x2b, 0xcd, 0xd5, 0x8f, 0x47, 0xeb, 0xb3,
	0xdb, 0x40, 0x15, 0xa5, 0x43, 0x28, 0xc9, 0x0f, 0x19, 0x62, 0xe6, 0x88, 0x31, 0xf7, 0xad, 0xd7,
	0xb2, 0x72, 0xfb, 0xab, 0x44, 0x23, 0xa8, 0x24, 0xe3, 0x48, 0x36, 0xf3, 0x8e, 0x5d, 0x56, 0xe0,
	0xd6, 0x0d, 0x10, 0x2a, 0xdd, 0x73, 0x68, 0xcc, 0xed, 0x24, 0xf9, 0x28, 0xcf, 0xb4, 0x5d, 0xda,
	0xe1, 0xa5, 0x0d, 0x7c, 0x0e, 0x8d, 0xb9, 0xe5, 0xcc, 0x15, 0xfd, 0xf2, 0x32, 0x2f, 0x8d, 0x7e,
	0x0c, 0xe5, 0xf8, 0x21, 0x20, 0x56, 0x4e, 0xc5, 0xcf, 0x88, 0xda, 0xcc, 0x0f, 0x50, 0x3c, 0x1d,
	0x43, 0x39, 0x99, 0x3f, 0x2b, 0xa7, 0x78, 0xde, 0x28, 0xd7, 0xc2, 0xac, 0xed, 0x9a, 0x3f, 0x3c,
	0xc8, 0xfd, 0x1f, 0xdd, 0xc3, 0xd3, 0xad, 0xc3, 0x4a, 0xcc, 0xcb, 0x07, 0xff, 0x07, 0x00, 0x00,
	0xff, 0xff, 0xdf, 0x73, 0xc4, 0x68, 0x08, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HeimdallClient is the client API for Heimdall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeimdallClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	AuthorizePeer(ctx context.Context, in *AuthorizePeerRequest, opts ...grpc.CallOption) (*types.Empty, error)
	DeauthorizePeer(ctx context.Context, in *DeauthorizePeerRequest, opts ...grpc.CallOption) (*types.Empty, error)
	AuthorizedPeers(ctx context.Context, in *AuthorizedPeersRequest, opts ...grpc.CallOption) (*AuthorizedPeersResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	Routes(ctx context.Context, in *RoutesRequest, opts ...grpc.CallOption) (*RoutesResponse, error)
	CreateRoute(ctx context.Context, in *CreateRouteRequest, opts ...grpc.CallOption) (*types.Empty, error)
	DeleteRoute(ctx context.Context, in *DeleteRouteRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error)
	Peers(ctx context.Context, in *PeersRequest, opts ...grpc.CallOption) (*PeersResponse, error)
}

type heimdallClient struct {
	cc *grpc.ClientConn
}

func NewHeimdallClient(cc *grpc.ClientConn) HeimdallClient {
	return &heimdallClient{cc}
}

func (c *heimdallClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) AuthorizePeer(ctx context.Context, in *AuthorizePeerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/AuthorizePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) DeauthorizePeer(ctx context.Context, in *DeauthorizePeerRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/DeauthorizePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) AuthorizedPeers(ctx context.Context, in *AuthorizedPeersRequest, opts ...grpc.CallOption) (*AuthorizedPeersResponse, error) {
	out := new(AuthorizedPeersResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/AuthorizedPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) Routes(ctx context.Context, in *RoutesRequest, opts ...grpc.CallOption) (*RoutesResponse, error) {
	out := new(RoutesResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/Routes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) CreateRoute(ctx context.Context, in *CreateRouteRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/CreateRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) DeleteRoute(ctx context.Context, in *DeleteRouteRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/DeleteRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error) {
	out := new(NodesResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallClient) Peers(ctx context.Context, in *PeersRequest, opts ...grpc.CallOption) (*PeersResponse, error) {
	out := new(PeersResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.heimdall.api.v1.Heimdall/Peers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeimdallServer is the server API for Heimdall service.
type HeimdallServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	AuthorizePeer(context.Context, *AuthorizePeerRequest) (*types.Empty, error)
	DeauthorizePeer(context.Context, *DeauthorizePeerRequest) (*types.Empty, error)
	AuthorizedPeers(context.Context, *AuthorizedPeersRequest) (*AuthorizedPeersResponse, error)
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	Routes(context.Context, *RoutesRequest) (*RoutesResponse, error)
	CreateRoute(context.Context, *CreateRouteRequest) (*types.Empty, error)
	DeleteRoute(context.Context, *DeleteRouteRequest) (*types.Empty, error)
	Nodes(context.Context, *NodesRequest) (*NodesResponse, error)
	Peers(context.Context, *PeersRequest) (*PeersResponse, error)
}

// UnimplementedHeimdallServer can be embedded to have forward compatible implementations.
type UnimplementedHeimdallServer struct {
}

func (*UnimplementedHeimdallServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedHeimdallServer) AuthorizePeer(ctx context.Context, req *AuthorizePeerRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizePeer not implemented")
}
func (*UnimplementedHeimdallServer) DeauthorizePeer(ctx context.Context, req *DeauthorizePeerRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeauthorizePeer not implemented")
}
func (*UnimplementedHeimdallServer) AuthorizedPeers(ctx context.Context, req *AuthorizedPeersRequest) (*AuthorizedPeersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizedPeers not implemented")
}
func (*UnimplementedHeimdallServer) Join(ctx context.Context, req *JoinRequest) (*JoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedHeimdallServer) Routes(ctx context.Context, req *RoutesRequest) (*RoutesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Routes not implemented")
}
func (*UnimplementedHeimdallServer) CreateRoute(ctx context.Context, req *CreateRouteRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoute not implemented")
}
func (*UnimplementedHeimdallServer) DeleteRoute(ctx context.Context, req *DeleteRouteRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoute not implemented")
}
func (*UnimplementedHeimdallServer) Nodes(ctx context.Context, req *NodesRequest) (*NodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Nodes not implemented")
}
func (*UnimplementedHeimdallServer) Peers(ctx context.Context, req *PeersRequest) (*PeersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Peers not implemented")
}

func RegisterHeimdallServer(s *grpc.Server, srv HeimdallServer) {
	s.RegisterService(&_Heimdall_serviceDesc, srv)
}

func _Heimdall_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_AuthorizePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).AuthorizePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/AuthorizePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).AuthorizePeer(ctx, req.(*AuthorizePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_DeauthorizePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeauthorizePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).DeauthorizePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/DeauthorizePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).DeauthorizePeer(ctx, req.(*DeauthorizePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_AuthorizedPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizedPeersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).AuthorizedPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/AuthorizedPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).AuthorizedPeers(ctx, req.(*AuthorizedPeersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_Routes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).Routes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/Routes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).Routes(ctx, req.(*RoutesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_CreateRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).CreateRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/CreateRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).CreateRoute(ctx, req.(*CreateRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_DeleteRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).DeleteRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/DeleteRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).DeleteRoute(ctx, req.(*DeleteRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).Nodes(ctx, req.(*NodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heimdall_Peers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallServer).Peers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.heimdall.api.v1.Heimdall/Peers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallServer).Peers(ctx, req.(*PeersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Heimdall_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.stellarproject.heimdall.api.v1.Heimdall",
	HandlerType: (*HeimdallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Heimdall_Connect_Handler,
		},
		{
			MethodName: "AuthorizePeer",
			Handler:    _Heimdall_AuthorizePeer_Handler,
		},
		{
			MethodName: "DeauthorizePeer",
			Handler:    _Heimdall_DeauthorizePeer_Handler,
		},
		{
			MethodName: "AuthorizedPeers",
			Handler:    _Heimdall_AuthorizedPeers_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Heimdall_Join_Handler,
		},
		{
			MethodName: "Routes",
			Handler:    _Heimdall_Routes_Handler,
		},
		{
			MethodName: "CreateRoute",
			Handler:    _Heimdall_CreateRoute_Handler,
		},
		{
			MethodName: "DeleteRoute",
			Handler:    _Heimdall_DeleteRoute_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _Heimdall_Nodes_Handler,
		},
		{
			MethodName: "Peers",
			Handler:    _Heimdall_Peers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/stellarproject/heimdall/api/v1/heimdall.proto",
}
